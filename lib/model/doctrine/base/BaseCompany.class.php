<?php

/**
 * BaseCompany
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property string $logo
 * @property string $url
 * @property string $telephone
 * @property string $adresse
 * @property string $code_postal
 * @property string $ville
 * @property string $commentaire
 * @property Doctrine_Collection $Contact
 * @property Doctrine_Collection $Job
 * 
 * @method string              getNom()         Returns the current record's "nom" value
 * @method string              getLogo()        Returns the current record's "logo" value
 * @method string              getUrl()         Returns the current record's "url" value
 * @method string              getTelephone()   Returns the current record's "telephone" value
 * @method string              getAdresse()     Returns the current record's "adresse" value
 * @method string              getCodePostal()  Returns the current record's "code_postal" value
 * @method string              getVille()       Returns the current record's "ville" value
 * @method string              getCommentaire() Returns the current record's "commentaire" value
 * @method Doctrine_Collection getContact()     Returns the current record's "Contact" collection
 * @method Doctrine_Collection getJob()         Returns the current record's "Job" collection
 * @method Company             setNom()         Sets the current record's "nom" value
 * @method Company             setLogo()        Sets the current record's "logo" value
 * @method Company             setUrl()         Sets the current record's "url" value
 * @method Company             setTelephone()   Sets the current record's "telephone" value
 * @method Company             setAdresse()     Sets the current record's "adresse" value
 * @method Company             setCodePostal()  Sets the current record's "code_postal" value
 * @method Company             setVille()       Sets the current record's "ville" value
 * @method Company             setCommentaire() Sets the current record's "commentaire" value
 * @method Company             setContact()     Sets the current record's "Contact" collection
 * @method Company             setJob()         Sets the current record's "Job" collection
 * 
 * @package    Physalix_Backend
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompany extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company');
        $this->hasColumn('nom', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('logo', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('telephone', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('adresse', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('code_postal', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('ville', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('commentaire', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Contact', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Job', array(
             'local' => 'id',
             'foreign' => 'fournisseur_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}